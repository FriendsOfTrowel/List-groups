/**
 * List-groups
 */
.list-group {
    list-style: none;
    padding-left: 0;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column;
    font-size: 1rem;
    font-family: 'Open Sans', verdana, sans-serif;
    line-height: 1.2;
    margin: 0 0 1em; }

.list-group--xs {
    font-size: 0.65rem; }

.list-group--sm {
    font-size: 0.8rem; }

.list-group--lg {
    font-size: 1.2rem; }

.list-group__item {
    position: relative;
    margin-bottom: -1px;
    border-width: 1px;
    border-style: solid;
    border-color: #cfcfd5;
    background-color: white;
    padding: 0.65em 1.65em; }

.list-group__item:last-child {
    margin-bottom: 0;
    border-bottom-right-radius: 0.2em;
    border-bottom-left-radius: 0.2em; }

.list-group__item--primary {
    border-color: #06030a;
    color: white;
    background-color: #1f0d33;
    z-index: 1; }

.list-group__item--success {
    border-color: #27b09d;
    background-color: #37d3bd;
    z-index: 1; }

.list-group__item--warning {
    border-color: #cc8d00;
    background-color: #ffb000;
    z-index: 1; }

.list-group__item--danger {
    border-color: #fc0f3b;
    background-color: #fd4164;
    z-index: 1; }

.list-group__item:first-child {
    border-top-right-radius: 0.2em;
    border-top-left-radius: 0.2em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
